import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";
import { MainLayout } from "~/Layout/MainLayout";
import { api } from "~/utils/api";
import '~/assets/Interaction Design-pana.svg'
import mobile from '~/assets/Mobile development-amico.svg'
import open from '~/assets/Open source-bro.svg'
import FirstPage from "~/components/ScrollPage_One";
import  SecondPage  from "~/components/scrollpage_two";
import  ThirdPage  from "~/components/scrollpage_three";
import  Footer  from "~/components/Footer";

// export {interaction, mobile, open}

const Home: NextPage = () => {
  const hello = api.example.hello.useQuery({ text: "from tRPC" });

  return (
    <MainLayout>
      <Head>
        <title>Hack Hub</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <div className="flex flex-col items-center justify-center min-h-screen py-2 bg-black">
          <div className="flex flex-col items-center justify-center gap-4">
            hello world
            </div>
            {/* <div>
              <AuthShowcase/>
            </div> */}
          </div>
          <FirstPage/>
          <SecondPage/>
          <ThirdPage/>
          <Footer/>
      </main>
    </MainLayout>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined },
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-full px-10 py-3 font-semibold text-black no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
